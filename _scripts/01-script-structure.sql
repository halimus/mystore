-- MySQL Script generated by MySQL Workbench
-- Tue May 23 20:29:57 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema storedb
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `storedb` ;

-- -----------------------------------------------------
-- Schema storedb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `storedb` DEFAULT CHARACTER SET utf8 ;
USE `storedb` ;

-- -----------------------------------------------------
-- Table `category`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `category` ;

CREATE TABLE IF NOT EXISTS `category` (
  `category_id` INT NOT NULL AUTO_INCREMENT,
  `category_name` VARCHAR(100) NOT NULL,
  `slug` VARCHAR(100) NOT NULL,
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`category_id`),
  UNIQUE INDEX `slug_UNIQUE` (`slug` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sub_category`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sub_category` ;

CREATE TABLE IF NOT EXISTS `sub_category` (
  `sub_category_id` INT NOT NULL AUTO_INCREMENT,
  `sub_category_name` VARCHAR(100) NOT NULL,
  `category_id` INT NOT NULL,
  PRIMARY KEY (`sub_category_id`),
  INDEX `fk_sub_category_category_idx` (`category_id` ASC),
  CONSTRAINT `fk_sub_category_category`
    FOREIGN KEY (`category_id`)
    REFERENCES `category` (`category_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `product`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `product` ;

CREATE TABLE IF NOT EXISTS `product` (
  `product_id` INT NOT NULL AUTO_INCREMENT,
  `product_name` VARCHAR(100) NOT NULL,
  `description` TEXT NULL,
  `quantity` SMALLINT(4) NULL,
  `price` DECIMAL(8,2) NULL,
  `active` TINYINT NOT NULL DEFAULT 1,
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` TIMESTAMP NULL,
  `category_id` INT NOT NULL,
  `sub_category_id` INT NULL,
  PRIMARY KEY (`product_id`),
  INDEX `fk_product_category1_idx` (`category_id` ASC),
  INDEX `fk_product_sub_category1_idx` (`sub_category_id` ASC),
  CONSTRAINT `fk_product_category1`
    FOREIGN KEY (`category_id`)
    REFERENCES `category` (`category_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_product_sub_category1`
    FOREIGN KEY (`sub_category_id`)
    REFERENCES `sub_category` (`sub_category_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `users` ;

CREATE TABLE IF NOT EXISTS `users` (
  `user_id` INT NOT NULL AUTO_INCREMENT,
  `user_name` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `password` VARCHAR(64) NOT NULL,
  `active` TINYINT NOT NULL DEFAULT 1,
  `role_id` ENUM('Administrator', 'Manager') NOT NULL,
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`user_id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `images`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `images` ;

CREATE TABLE IF NOT EXISTS `images` (
  `image_id` INT NOT NULL AUTO_INCREMENT,
  `image_file` LONGBLOB NOT NULL,
  `mime_type` VARCHAR(10) NULL,
  `product_id` INT NOT NULL,
  PRIMARY KEY (`image_id`),
  INDEX `fk_images_product1_idx` (`product_id` ASC),
  CONSTRAINT `fk_images_product1`
    FOREIGN KEY (`product_id`)
    REFERENCES `product` (`product_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `view_subcategory`
-- -----------------------------------------------------

CREATE
    /*[ALGORITHM = {UNDEFINED | MERGE | TEMPTABLE}]
    [DEFINER = { user | CURRENT_USER }]
    [SQL SECURITY { DEFINER | INVOKER }]*/
    VIEW `view_subcategory` 
    AS
(
SELECT
    `sub_category`.`sub_category_id`
    , `sub_category`.`sub_category_name`
    , `sub_category`.`category_id`
    , `category`.`category_name`
FROM
    `sub_category`
    INNER JOIN `category` 
        ON (`sub_category`.`category_id` = `category`.`category_id`)
);



-- -----------------------------------------------------
-- Table `view_product`
-- -----------------------------------------------------

CREATE
    /*[ALGORITHM = {UNDEFINED | MERGE | TEMPTABLE}]
    [DEFINER = { user | CURRENT_USER }]
    [SQL SECURITY { DEFINER | INVOKER }]*/
    VIEW `view_product` 
    AS
(
SELECT
    `product`.`product_id`
    , `product`.`product_name`
    , `product`.`description`
    , `product`.`quantity`
    , `product`.`price`
    , CONCAT('$', FORMAT(price, 2)) AS price_format
    , `product`.`active`
    , (CASE WHEN `product`.`active` <> 0 THEN 'YES' ELSE 'NO' END) AS active_txt
    , `product`.`created_at`
    , `product`.`updated_at`
    , `product`.`sub_category_id`
    , `product`.`category_id`
    , `category`.`category_name`
FROM
    `storedb`.`product`
    LEFT JOIN `storedb`.`category` 
        ON (`product`.`category_id` = `category`.`category_id`)
);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
